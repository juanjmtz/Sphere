/*
 * Copyright (C) 2018 Juan J. Martínez
 * 
 * All rights reserved. This complete software or any portion thereof
 * can be used as reference but may not be reproduced in any manner 
 * whatsoever without the express written permission of the owner.
 * 
 * The purpose of this is to be consulted and used as a referece of 
 * functionallyty.
 * 
 * Developed in Mexico City
 * First version, 2018
 *
 */

/**
 *
 * @author Juan J. Martínez
 * @email juanjmtzs@gmail.com
 * @phone +52-1-55-1247-8044
 * @linkedin https://www.linkedin.com/in/juanjmtzs/
 *
 */

package OUCH;

import Decoder.OuchNoBytes;
import Decoder.OuchYesBytes;
import Handler.OUCHSoupBinTCPNoBytes;
import Handler.OUCHSoupBinTCPYesBytes;
import java.awt.Toolkit;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class NewOrder extends javax.swing.JFrame {

    /**
     * Creates new form NewOrder
     */
    private String accType;
    private JFrame windows;
    private String timeInForce;
    public static String mDPrice = "";

    public NewOrder() {
        initComponents();

        //this.setUndecorated(true);
        //this.setBackground(new Color(1.0f,1.0f,1.0f,0.5f));
        windows = this;
        ClassLoader classLoader = getClass().getClassLoader();
        ImageIcon img = new ImageIcon(classLoader.getResource("imgs/icon2.png"));

        windows.setIconImage(img.getImage());

        this.setLocationRelativeTo(null);
        if (OUCHMain.printBytesOuch.isSelected() == true) {
            orderTokenField.setText(OuchYesBytes.token + 1 + "");
        } else {
            orderTokenField.setText(OuchNoBytes.token + 1 + "");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        minQuantityField = new javax.swing.JTextField();
        clientIdField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        orderbookField = new javax.swing.JTextField();
        quantityField = new javax.swing.JTextField();
        orderVerbField = new javax.swing.JTextField();
        accountIdField = new javax.swing.JTextField();
        orderTokenField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        accounTypeSelector = new javax.swing.JComboBox<>();
        timeInForceSelector = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        typeSelector = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Order");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(238, 238, 238));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Order Token:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Account Type:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Account Id:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Order Verb:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Quantity:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Orderbook:");

        priceLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(51, 51, 51));
        priceLabel.setText("Price:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Time in Force:");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Client Id:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Minimum Quantity:");

        minQuantityField.setBackground(new java.awt.Color(242, 242, 242));
        minQuantityField.setForeground(new java.awt.Color(38, 38, 38));
        minQuantityField.setText("0");
        minQuantityField.setToolTipText("1-9999999999");
        minQuantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minQuantityFieldActionPerformed(evt);
            }
        });
        minQuantityField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                minQuantityFieldKeyTyped(evt);
            }
        });

        clientIdField.setBackground(new java.awt.Color(242, 242, 242));
        clientIdField.setForeground(new java.awt.Color(38, 38, 38));
        clientIdField.setText("0");
        clientIdField.setToolTipText("1-9999999999");
        clientIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientIdFieldActionPerformed(evt);
            }
        });
        clientIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                clientIdFieldKeyTyped(evt);
            }
        });

        priceField.setBackground(new java.awt.Color(242, 242, 242));
        priceField.setForeground(new java.awt.Color(38, 38, 38));
        priceField.setText("0");
        priceField.setToolTipText("1-9999999999");
        priceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceFieldKeyTyped(evt);
            }
        });

        orderbookField.setEditable(false);
        orderbookField.setBackground(new java.awt.Color(242, 242, 242));
        orderbookField.setForeground(new java.awt.Color(38, 38, 38));
        orderbookField.setText("0");

        quantityField.setBackground(new java.awt.Color(242, 242, 242));
        quantityField.setForeground(new java.awt.Color(38, 38, 38));
        quantityField.setText("0");
        quantityField.setToolTipText("1-9999999999");
        quantityField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityFieldKeyTyped(evt);
            }
        });

        orderVerbField.setEditable(false);
        orderVerbField.setBackground(new java.awt.Color(242, 242, 242));
        orderVerbField.setForeground(new java.awt.Color(38, 38, 38));
        orderVerbField.setText("B");

        accountIdField.setBackground(new java.awt.Color(242, 242, 242));
        accountIdField.setForeground(new java.awt.Color(38, 38, 38));
        accountIdField.setText("0");
        accountIdField.setToolTipText("1-9999999999");
        accountIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                accountIdFieldKeyTyped(evt);
            }
        });

        orderTokenField.setEditable(false);
        orderTokenField.setBackground(new java.awt.Color(242, 242, 242));
        orderTokenField.setForeground(new java.awt.Color(38, 38, 38));
        orderTokenField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderTokenFieldActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(38, 38, 38));
        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        accounTypeSelector.setBackground(new java.awt.Color(242, 242, 242));
        accounTypeSelector.setForeground(new java.awt.Color(38, 38, 38));
        accounTypeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Client", "House", "Other", "Strategy", "Market Maker", "Stabilisation" }));

        timeInForceSelector.setBackground(new java.awt.Color(242, 242, 242));
        timeInForceSelector.setForeground(new java.awt.Color(38, 38, 38));
        timeInForceSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Immediate", "Session", "Day" }));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Type:");

        typeSelector.setBackground(new java.awt.Color(242, 242, 242));
        typeSelector.setForeground(new java.awt.Color(38, 38, 38));
        typeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Limit", "Market" }));
        typeSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeSelectorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(priceLabel)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderVerbField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(accountIdField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orderTokenField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(accounTypeSelector, javax.swing.GroupLayout.Alignment.TRAILING, 0, 209, Short.MAX_VALUE)
                    .addComponent(timeInForceSelector, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minQuantityField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clientIdField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(typeSelector, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orderbookField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(quantityField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(orderTokenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(accounTypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(accountIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(orderVerbField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(orderbookField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(typeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(timeInForceSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(clientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(minQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void orderTokenFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderTokenFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTokenFieldActionPerformed

    private void clientIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientIdFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            switch (accounTypeSelector.getSelectedIndex()) {
                case 0:
                    accType = "C";
                    break;
                case 1:
                    accType = "H";
                    break;
                case 2:
                    accType = "O";
                    break;
                case 3:
                    accType = "Y";
                    break;
                case 4:
                    accType = "M";
                    break;
                case 5:
                    accType = "S";
                    break;
            }
            switch (timeInForceSelector.getSelectedIndex()) {
                case 0:
                    timeInForce = "0";
                    break;
                case 1:
                    timeInForce = "99997";
                    break;
                case 2:
                    timeInForce = "99998";
                    break;
            }
            // TODO add your handling code here:

            if (OUCHMain.printBytesOuch.isSelected() == true) {
                OUCHSoupBinTCPYesBytes.EnterOrder((orderTokenField.getText()), accType, accountIdField.getText(), orderVerbField.getText(), quantityField.getText(), orderbookField.getText(), priceField.getText(), timeInForce, clientIdField.getText(), minQuantityField.getText());
                orderTokenField.setText(OuchYesBytes.token + 2 + "");
            } else {
                OUCHSoupBinTCPNoBytes.EnterOrder((orderTokenField.getText()), accType, accountIdField.getText(), orderVerbField.getText(), quantityField.getText(), orderbookField.getText(), priceField.getText(), timeInForce, clientIdField.getText(), minQuantityField.getText());
                orderTokenField.setText(OuchNoBytes.token + 2 + "");
            }

            this.dispose();
        } catch (IOException e) {
            //System.out.print("Exception sending logoff packet: " + e);
            String messageError = "Socket closed" + "\n" + e;

            // create a jframe
            JFrame error = new JFrame();

            // show a joptionpane dialog using showMessageDialog
            JOptionPane.showMessageDialog(error, messageError, "Information", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void minQuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minQuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minQuantityFieldActionPerformed

    private void typeSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeSelectorActionPerformed
        // TODO add your handling code here:
        switch (typeSelector.getSelectedIndex()) {
            case 0:
                priceLabel.setVisible(true);
                priceField.setVisible(true);
                priceField.setText(mDPrice);
                break;
            case 1:
                priceLabel.setVisible(false);
                priceField.setVisible(false);
                priceField.setText("2147483647");
                break;
        }
    }//GEN-LAST:event_typeSelectorActionPerformed

    private void accountIdFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accountIdFieldKeyTyped
        // TODO add your handling code here:
        char teclaPulsada = evt.getKeyChar();
        if (!Character.isDigit(teclaPulsada)) {
            evt.consume();
        }
        if (accountIdField.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_accountIdFieldKeyTyped

    private void quantityFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityFieldKeyTyped
        // TODO add your handling code here:
        char teclaPulsada = evt.getKeyChar();
        if (!Character.isDigit(teclaPulsada)) {
            evt.consume();
        }
        if (quantityField.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_quantityFieldKeyTyped

    private void priceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceFieldKeyTyped
        // TODO add your handling code here:
        char teclaPulsada = evt.getKeyChar();
        if (!Character.isDigit(teclaPulsada)) {
            evt.consume();
        }
        if (priceField.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_priceFieldKeyTyped

    private void clientIdFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientIdFieldKeyTyped
        // TODO add your handling code here:
        char teclaPulsada = evt.getKeyChar();
        if (!Character.isDigit(teclaPulsada)) {
            evt.consume();
        }
        if (clientIdField.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_clientIdFieldKeyTyped

    private void minQuantityFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_minQuantityFieldKeyTyped
        // TODO add your handling code here:
        char teclaPulsada = evt.getKeyChar();
        if (!Character.isDigit(teclaPulsada)) {
            evt.consume();
        }
        if (minQuantityField.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_minQuantityFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accounTypeSelector;
    private javax.swing.JTextField accountIdField;
    private javax.swing.JTextField clientIdField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField minQuantityField;
    private javax.swing.JTextField orderTokenField;
    public javax.swing.JTextField orderVerbField;
    public javax.swing.JTextField orderbookField;
    public javax.swing.JTextField priceField;
    private javax.swing.JLabel priceLabel;
    public javax.swing.JTextField quantityField;
    private javax.swing.JComboBox<String> timeInForceSelector;
    private javax.swing.JComboBox<String> typeSelector;
    // End of variables declaration//GEN-END:variables
}
